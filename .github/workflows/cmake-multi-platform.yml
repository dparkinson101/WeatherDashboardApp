name: CMake on multiple platforms

on:
  push:
    branches: [ "main", "fix-ci" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - runner: [self-hosted, Linux]
            os: linux
            triplet: x64-linux
          - runner: [self-hosted, Windows]
            os: windows
            triplet: x64-windows

    steps:
      - uses: actions/checkout@v3

      - name: Install CMake
        uses: lukka/get-cmake@latest

      - name: Install Linux build dependencies
        if: matrix.os == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            ninja-build \
            autoconf \
            autoconf-archive \
            automake \
            libtool \
            pkg-config \
            libltdl-dev \
            '^libxcb.*-dev' \
            libx11-xcb-dev \
            libglu1-mesa-dev \
            libxrender-dev \
            libxi-dev \
            libxkbcommon-dev \
            libxkbcommon-x11-dev \
            libegl1-mesa-dev

      - name: Install Ninja on Windows
        if: matrix.os == 'windows'
        run: choco install ninja -y

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: '${{ runner.temp }}/vcpkg'
          vcpkgJsonGlob: 'vcpkg.json'
          triplet: ${{ matrix.triplet }}

      - name: Cache vcpkg packages
        uses: actions/cache@v3
        with:
          path: ${{ runner.temp }}/vcpkg/packages
          key: vcpkg-${{ matrix.os }}-${{ matrix.triplet }}-${{ hashFiles('vcpkg.json') }}

      - name: Cache CMake build
        uses: actions/cache@v3
        with:
          path: build
          key: ${{ matrix.os }}-build-${{ hashFiles('CMakeLists.txt', '**/CMakeLists.txt') }}
          restore-keys: |
            ${{ matrix.os }}-build-

      - name: Configure CMake
        run: cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON -DCMAKE_TOOLCHAIN_FILE=${{ runner.temp }}/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet }}

      - name: Build
        run: cmake --build build --config Release --parallel 2

      - name: Test
        run: ctest --test-dir build --output-on-failure --build-config Release
